# Compile of alu.v was successful.
# Compile of ctrl.v was successful.
# Compile of ctrl_encode_def.v was successful.
# Compile of EXT.v was successful.
# Compile of flopenr.v was successful.
# Compile of flopr.v was successful.
# Compile of mccpu.v was successful.
# Compile of mux.v was successful.
# Compile of RF.v was successful.
# Compile of dm.v was successful.
# Compile of mccomp.v was successful.
# Compile of mccomp_tb.v was successful.
# 12 compiles, 0 failed with no errors.
vsim -gui work.mccomp_tb -novopt
# vsim -gui work.mccomp_tb -novopt 
# Start time: 11:39:30 on Apr 04,2023
# ** Warning: (vsim-8891) All optimizations are turned off because the -novopt switch is in effect. This will cause your simulation to run very slowly. If you are using this switch to preserve visibility for Debug or PLI features please see the User's Manual section on Preserving Object Visibility with vopt.
# Refreshing D:/CODWork/MCCPU_SIM/work.mccomp_tb
# Loading work.mccomp_tb
# Refreshing D:/CODWork/MCCPU_SIM/work.mccomp
# Loading work.mccomp
# Refreshing D:/CODWork/MCCPU_SIM/work.mccpu
# Loading work.mccpu
# Refreshing D:/CODWork/MCCPU_SIM/work.ctrl
# Loading work.ctrl
# Refreshing D:/CODWork/MCCPU_SIM/work.flopenr
# Loading work.flopenr
# Refreshing D:/CODWork/MCCPU_SIM/work.mux4
# Loading work.mux4
# Refreshing D:/CODWork/MCCPU_SIM/work.mux2
# Loading work.mux2
# Refreshing D:/CODWork/MCCPU_SIM/work.flopr
# Loading work.flopr
# Refreshing D:/CODWork/MCCPU_SIM/work.RF
# Loading work.RF
# Refreshing D:/CODWork/MCCPU_SIM/work.EXT
# Loading work.EXT
# Refreshing D:/CODWork/MCCPU_SIM/work.alu
# Loading work.alu
# Refreshing D:/CODWork/MCCPU_SIM/work.dm
# Loading work.dm
run 40000
# r[ 2] = 0x02180000,
# r[ 2] = 0x02181021,
# dmem[0x00000100] = 0x02181021,
# r[11] = 0x00000008,
# r[ 1] = 0x02181021,
# r[ 2] = 0x00000000,
# r[ 4] = 0x0000000f,
# r[ 7] = 0x00000001,
# r[ 9] = 0x00000000,
# r[ 7] = 0x00000001,
# r[ 5] = 0x000000f0,
# r[12] = 0x00000000,
# r[13] = 0x00000001,
# r[ 3] = 0x00000001,
# r[ 8] = 0x00000020,
# r[10] = 0x00000004,
# r[ 8] = 0x00000002,
# r[14] = 0x00000001,
# r[13] = 0x00000002,
# r[12] = 0x00000001,
# r[ 5] = 0x00000f00,
# r[ 3] = 0x00000002,
# r[ 8] = 0x00000000,
# r[10] = 0x00000008,
# r[ 8] = 0x00000000,
# r[14] = 0x00000000,
# r[ 5] = 0x0000f000,
# r[ 3] = 0x00000003,
# r[ 8] = 0x00001000,
# r[10] = 0x0000000c,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x000f0000,
# r[ 3] = 0x00000004,
# r[ 8] = 0x00080000,
# r[10] = 0x00000010,
# r[ 8] = 0x00000008,
# r[14] = 0x00000001,
# r[13] = 0x00000008,
# r[12] = 0x00000004,
# r[ 5] = 0x00f00000,
# r[ 3] = 0x00000005,
# r[ 8] = 0x00100000,
# r[10] = 0x00000014,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x0f000000,
# r[ 3] = 0x00000006,
# r[ 8] = 0x02000000,
# r[10] = 0x00000018,
# r[ 8] = 0x00000002,
# r[14] = 0x00000000,
# r[ 5] = 0xf0000000,
# r[ 3] = 0x00000007,
# r[ 8] = 0x00000000,
# r[10] = 0x0000001c,
# r[ 8] = 0x00000000,
# r[14] = 0x00000000,
# r[ 5] = 0x00000000,
# r[ 3] = 0x00000008,
# r[14] = 0x00000001,
# r[31] = 0x00000070,
# r[ 5] = 0x0000000f,
# r[10] = 0x00000010,
# r[ 5] = 0x000f0000,
# r[ 6] = 0x000f000f,
# r[ 6] = 0xfff0fff0,
# r[ 1] = 0x02101020,
# r[ 8] = 0x00000008,
# r[ 1] = 0x02101028,
# r[ 7] = 0x00010000,
# r[ 1] = 0x02111028,
# r[ 4] = 0x000000f0,
# r[ 2] = 0x00000001,
# r[ 7] = 0x00000020,
# r[ 9] = 0x00000004,
# r[ 7] = 0x00000002,
# r[ 5] = 0x00000f00,
# r[12] = 0x00000001,
# r[13] = 0x00000002,
# r[ 3] = 0x00000002,
# r[ 8] = 0x00000000,
run 10000
# r[10] = 0x00000008,
# r[ 8] = 0x00000000,
# r[14] = 0x00000000,
# r[ 5] = 0x0000f000,
# r[ 3] = 0x00000003,
# r[ 8] = 0x00001000,
# r[10] = 0x0000000c,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x000f0000,
# r[ 3] = 0x00000004,
# r[ 8] = 0x00010000,
# r[10] = 0x00000010,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x00f00000,
# r[ 3] = 0x00000005,
# r[ 8] = 0x00100000,
# r[10] = 0x00000014,
run 10000
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x0f000000,
# r[ 3] = 0x00000006,
# r[ 8] = 0x02000000,
# r[10] = 0x00000018,
# r[ 8] = 0x00000002,
# r[14] = 0x00000000,
# r[ 5] = 0xf0000000,
# r[ 3] = 0x00000007,
# r[ 8] = 0x00000000,
# r[10] = 0x0000001c,
# r[ 8] = 0x00000000,
# r[14] = 0x00000000,
# r[ 5] = 0x00000000,
# r[ 3] = 0x00000008,
# r[14] = 0x00000000,
# r[ 4] = 0x00000f00,
# r[ 2] = 0x00000002,
run 10000
# r[ 7] = 0x00000000,
# r[ 9] = 0x00000008,
# r[ 7] = 0x00000000,
# r[ 5] = 0x0000f000,
# r[12] = 0x00000002,
# r[13] = 0x00000000,
# r[ 3] = 0x00000003,
# r[ 8] = 0x00001000,
# r[10] = 0x0000000c,
# r[ 8] = 0x00000001,
# r[14] = 0x00000001,
# r[13] = 0x00000001,
# r[12] = 0x00000003,
# r[ 5] = 0x000f0000,
# r[ 3] = 0x00000004,
# r[ 8] = 0x00010000,
# r[10] = 0x00000010,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x00f00000,
run 10000
# r[ 3] = 0x00000005,
# r[ 8] = 0x00100000,
# r[10] = 0x00000014,
# r[ 8] = 0x00000001,
# r[14] = 0x00000000,
# r[ 5] = 0x0f000000,
# r[ 3] = 0x00000006,
# r[ 8] = 0x02000000,
# r[10] = 0x00000018,
# r[ 8] = 0x00000002,
# r[14] = 0x00000001,
# r[13] = 0x00000002,
# r[12] = 0x00000006,
# r[ 5] = 0xf0000000,
# r[ 3] = 0x00000007,
# r[ 8] = 0x00000000,
# r[10] = 0x0000001c,
# r[ 8] = 0x00000000,
# r[14] = 0x00000000,
run 10000
# r[ 5] = 0x00000000,
# r[ 3] = 0x00000008,
# r[14] = 0x00000001,
# r[31] = 0x00000070,
# r[ 5] = 0x0000000f,
# r[10] = 0x00000018,
# r[ 5] = 0x0f000000,
# r[ 6] = 0x0f000f00,
# r[ 6] = 0xf0fff0ff,
# r[ 1] = 0x00111028,
# r[ 8] = 0x00000200,
# r[ 1] = 0x00111228,
# r[ 7] = 0x00000000,
# r[ 1] = 0x00111228,
# r[ 4] = 0x0000f000,
# r[ 2] = 0x00000003,
# r[ 7] = 0x00001000,
# r[ 9] = 0x0000000c,
# r[ 7] = 0x00000001,
# r[ 5] = 0x000f0000,
# r[12] = 0x00000003,
# r[13] = 0x00000001,
# r[ 3] = 0x00000004,
